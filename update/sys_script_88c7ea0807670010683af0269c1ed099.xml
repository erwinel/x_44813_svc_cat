<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_req_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>USASOC Req Item Events</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
    if (current.stage.changes()) {
        switch ('' + current.stage) {
            case UsasocScCatItem.STAGE_PROCUREMENT:
                if (gs.nil(previous) || previous.stage != UsasocScCatItem.STAGE_BACKORDERED)
                    gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_APPROVED, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                break;
            case UsasocScCatItem.STAGE_BACKORDERED:
                gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_BACKORDERED, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                break;
            case UsasocScCatItem.STAGE_FULFILLMENT:
                if (current.variables.hw_installer_assignee_type == 'requested_for')
                    gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_RECEIVED_CUSTOMER, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                else
                    gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_RECEIVED_SD, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                break;
            case UsasocScCatItem.STAGE_REQUEST_CANCELLED:
                gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_CANCELED, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                break;
            case UsasocScCatItem.STAGE_COMPLETE:
                gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_COMPLETED, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
                break;
            case UsasocScCatItem.STAGE_WAITING_FOR_APPROVAL:
                if (!current.approval.changesFrom("not requested"))
                    gs.eventQueue(UsasocScCatItem.EVENT_NAME_REQ_ITEM_REJECTED, current, current.stage, (gs.nil(previous) || gs.nil(previous.stage)) ? '' : previous.stage);
        }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>erwinel_da</sys_created_by>
        <sys_created_on>2020-03-09 22:52:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>88c7ea0807670010683af0269c1ed099</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>USASOC Req Item Events</sys_name>
        <sys_overrides/>
        <sys_package display_value="USASOC Service Catalog Customizations" source="x_44813_svc_cat">4078c57507130010683af0269c1ed021</sys_package>
        <sys_policy/>
        <sys_scope display_value="USASOC Service Catalog Customizations">4078c57507130010683af0269c1ed021</sys_scope>
        <sys_update_name>sys_script_88c7ea0807670010683af0269c1ed099</sys_update_name>
        <sys_updated_by>erwinel_da</sys_updated_by>
        <sys_updated_on>2020-03-09 22:52:33</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=88c7ea0807670010683af0269c1ed099"/>
</record_update>
